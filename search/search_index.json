{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Manifest/","title":"\ud83d\udcd8 Descripci\u00f3n general del manifiesto de la app","text":"<p>El archivo <code>AndroidManifest.xml</code> es esencial en cualquier proyecto de aplicaci\u00f3n Android. Se encuentra en la ra\u00edz del conjunto de or\u00edgenes del proyecto y proporciona informaci\u00f3n crucial tanto para las herramientas de compilaci\u00f3n de Android como para el sistema operativo y Google Play.</p>"},{"location":"Manifest/#que-es-el-archivo-de-manifiesto","title":"\u00bfQu\u00e9 es el archivo de manifiesto?","text":"<p>Este archivo describe informaci\u00f3n esencial sobre tu app, incluyendo:</p> <ul> <li>El nombre del paquete de la aplicaci\u00f3n.</li> <li>Las actividades, servicios, receptores de difusi\u00f3n y proveedores de contenido que componen la aplicaci\u00f3n.</li> <li>Los permisos que la aplicaci\u00f3n requiere.</li> <li>Las caracter\u00edsticas de hardware y software que la aplicaci\u00f3n necesita.</li> <li>La configuraci\u00f3n de la aplicaci\u00f3n, como el \u00edcono, la etiqueta y el tema.</li> </ul>"},{"location":"Manifest/#componentes-del-archivo-de-manifiesto","title":"Componentes del archivo de manifiesto","text":"<p>El archivo <code>AndroidManifest.xml</code> debe declarar los siguientes componentes:</p> <ol> <li><code>&lt;manifest&gt;</code>: Elemento ra\u00edz que contiene todos los dem\u00e1s elementos.</li> <li><code>&lt;application&gt;</code>: Define la configuraci\u00f3n global de la aplicaci\u00f3n.</li> <li><code>&lt;activity&gt;</code>: Declara una actividad que representa una pantalla de la aplicaci\u00f3n.</li> <li><code>&lt;service&gt;</code>: Define un servicio que realiza operaciones en segundo plano.</li> <li><code>&lt;receiver&gt;</code>: Declara un receptor de difusi\u00f3n que escucha eventos del sistema o de otras aplicaciones.</li> <li><code>&lt;provider&gt;</code>: Define un proveedor de contenido que gestiona el acceso a datos compartidos.</li> </ol>"},{"location":"Manifest/#permisos-y-caracteristicas","title":"Permisos y caracter\u00edsticas","text":"<p>El archivo de manifiesto tambi\u00e9n se utiliza para declarar:</p> <ul> <li>Permisos: Especifica los permisos que la aplicaci\u00f3n necesita para acceder a recursos protegidos, como la c\u00e1mara o el acceso a Internet.</li> <li>Caracter\u00edsticas: Define las caracter\u00edsticas de hardware y software que la aplicaci\u00f3n requiere, como la c\u00e1mara o la conectividad Bluetooth.</li> </ul>"},{"location":"Manifest/#ejemplo-de-archivo-androidmanifestxml","title":"Ejemplo de archivo AndroidManifest.xml","text":"<pre><code>&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.myapp\"&gt;\n    &lt;application\n        android:label=\"My App\"\n        android:icon=\"@drawable/ic_launcher\"&gt;\n        &lt;activity android:name=\".MainActivity\"&gt;\n            &lt;intent-filter&gt;\n                &lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/activity&gt;\n    &lt;/application&gt;\n&lt;/manifest&gt;\n</code></pre>"},{"location":"Manifest/#recomendaciones","title":"Recomendaciones","text":"<ul> <li>Organizaci\u00f3n: Mant\u00e9n el archivo <code>AndroidManifest.xml</code> bien estructurado y organizado para facilitar su mantenimiento.</li> <li>Declaraci\u00f3n de componentes: Aseg\u00farate de declarar todos los componentes necesarios para el correcto funcionamiento de la aplicaci\u00f3n.</li> <li>Permisos: Solicita solo los permisos que realmente necesita la aplicaci\u00f3n para evitar problemas de privacidad y seguridad.</li> </ul> <p>Para m\u00e1s detalles, puedes consultar la p\u00e1gina oficial de Android sobre el manifiesto de la app.</p> <p>Enlace a la pagina</p>"},{"location":"directoris_de_codi_font/","title":"\ud83d\udce5 C\u00f3mo descargar el c\u00f3digo fuente de Android","text":"<p>Este documento proporciona un resumen de la p\u00e1gina oficial de Android sobre c\u00f3mo descargar el c\u00f3digo fuente de AOSP. Es ideal para desarrolladores que deseen contribuir o personalizar el sistema operativo Android.</p> <p></p>"},{"location":"directoris_de_codi_font/#requisitos-previos","title":"\ud83d\udd27 Requisitos previos","text":"<p>Antes de comenzar, aseg\u00farate de tener instalados los siguientes programas:</p> <ul> <li>Git: sistema de control de versiones distribuido.</li> <li>Repo: herramienta de Google para gestionar m\u00faltiples repositorios de Git.</li> <li>Python: necesario para ejecutar Repo.</li> <li>Herramientas de desarrollo: como <code>make</code>, <code>curl</code>, <code>gcc</code>, entre otras.</li> </ul>"},{"location":"directoris_de_codi_font/#pasos-para-descargar-el-codigo-fuente","title":"\ud83d\udee0\ufe0f Pasos para descargar el c\u00f3digo fuente","text":"<ol> <li>Crea y navega a un directorio de trabajo</li> </ol> <p><code>bash    mkdir WORKING_DIRECTORY    cd WORKING_DIRECTORY</code></p> <ol> <li>Inicializa el cliente Repo</li> </ol> <p><code>bash    repo init --partial-clone --no-use-superproject -b android-latest-release -u https://android.googlesource.com/platform/manifest</code></p> <p>Nota: Este comando configura Repo para usar la rama <code>android-latest-release</code>.</p> <ol> <li>Sincroniza el repositorio</li> </ol> <p><code>bash    repo sync -c -j8</code></p> <p>Resaltado: Este proceso puede tardar m\u00e1s de una hora dependiendo de tu conexi\u00f3n a Internet.</p>"},{"location":"directoris_de_codi_font/#descarga-de-binarios-propietarios","title":"\ud83d\udce6 Descarga de binarios propietarios","text":"<p>Para ejecutar AOSP en hardware real, necesitar\u00e1s binarios espec\u00edficos del dispositivo. Puedes obtenerlos desde el sitio oficial de binarios.</p> <p>Una vez descargados, extrae los archivos y ejecuta el script incluido desde el directorio ra\u00edz del c\u00f3digo fuente.</p>"},{"location":"directoris_de_codi_font/#verificacion-del-codigo","title":"\ud83e\uddea Verificaci\u00f3n del c\u00f3digo","text":"<p>Si deseas verificar la autenticidad del c\u00f3digo fuente, utiliza claves PGP para confirmar que proviene de una fuente oficial. Consulta la documentaci\u00f3n oficial para m\u00e1s detalles sobre c\u00f3mo realizar esta verificaci\u00f3n.</p> <p>Para m\u00e1s informaci\u00f3n y detalles, visita la p\u00e1gina oficial de Android:</p> <p>https://source.android.com/docs/setup/download?hl=es-419</p>"},{"location":"scripts_gradle/","title":"Writing Build Scripts","text":""},{"location":"scripts_gradle/#1-anatomia-de-un-script-de-construccion","title":"1. Anatom\u00eda de un script de construcci\u00f3n","text":"<ul> <li>Los scripts de Gradle se escriben en Groovy DSL (<code>*.gradle</code>) o Kotlin DSL (<code>*.gradle.kts</code>)</li> <li>El script puede configurar objetos de tipo Settings, Project y (tambi\u00e9n) Gradle (aunque lo de Gradle no entra en el nivel intermedio).  </li> <li>Se compone de dos tipos principales de elementos:  </li> <li>Statements: expresiones de nivel superior que se ejecutan inmediatamente (fase de inicializaci\u00f3n o configuraci\u00f3n).   </li> <li>Blocks (bloques): se pasan como closures (Groovy) o lambdas (Kotlin) a m\u00e9todos de configuraci\u00f3n, para configurar objetos internos como <code>project</code>, <code>repositories</code>, <code>dependencies</code> </li> </ul>"},{"location":"scripts_gradle/#2-clausuras-lambdas-delegados-receptores","title":"2. Clausuras, lambdas, delegados / receptores","text":"<ul> <li>En Groovy, los bloques son closures y Gradle usa delegaci\u00f3n din\u00e1mica para resolver llamadas a m\u00e9todos o propiedades dentro del closure. </li> <li>En Kotlin, se usan lambdas con receptor; el receptor (<code>this</code>) est\u00e1 tipado est\u00e1ticamente. </li> <li>Dentro de bloques comunes como <code>repositories { ... }</code>, se configura un objeto receptor espec\u00edfico (por ejemplo <code>RepositoryHandler</code>). Llamadas como <code>mavenCentral()</code> no necesitan calificativo expl\u00edcito.</li> </ul>"},{"location":"scripts_gradle/#3-variables-y-propiedades","title":"3. Variables y propiedades","text":"<ul> <li>Variables locales:  </li> <li>En Kotlin: <code>val</code> </li> <li>En Groovy: <code>def</code> </li> <li>Propiedades extra (extra / ext): permiten a\u00f1adir datos definidos por el usuario a objetos mejorados como <code>project</code>. Tienen un \u00e1mbito m\u00e1s amplio que las variables locales.</li> </ul>"},{"location":"scripts_gradle/#4-ejecucion-paso-a-paso","title":"4. Ejecuci\u00f3n paso a paso","text":"<ul> <li>El script de construcci\u00f3n se ejecuta l\u00ednea a l\u00ednea durante la fase de configuraci\u00f3n.  </li> <li>Las instrucciones externas a bloques se ejecutan inmediatamente; para l\u00f3gica tard\u00eda se recomiendan APIs perezosas o <code>Provider</code>. </li> <li>El orden de declaraci\u00f3n puede afectar el comportamiento; por ejemplo, definir variables o tareas en un cierto orden es relevante. </li> </ul>"},{"location":"scripts_gradle/#5-ejemplo-practico-analisis-de-un-script","title":"5. Ejemplo pr\u00e1ctico: an\u00e1lisis de un script","text":"<p>Se presenta un ejemplo en ambos DSL (Groovy y Kotlin) con varias secciones, para ilustrar:</p> <ol> <li>Aplicar plugins (<code>plugins { ... }</code>)  </li> <li>Definir repositorios (<code>repositories { ... }</code>)  </li> <li>A\u00f1adir dependencias (<code>dependencies { ... }</code>)  </li> <li>Establecer propiedades del proyecto (<code>application { mainClass = ... }</code>)  </li> <li>Registrar y configurar tareas (<code>tasks.register</code>, <code>tasks.named</code>, etc.)  </li> </ol> <p>Dentro del ejemplo, se destaca que se prefiere <code>tasks.register(...)</code> sobre <code>tasks.create(...)</code> para favorecer la evitaci\u00f3n de configuraci\u00f3n temprana (configuration avoidance). </p>"},{"location":"scripts_gradle/#ejemplo-de-build-script","title":"Ejemplo de Build Script","text":"<pre><code>kotlin\n// build.gradle.kts\n\nplugins {   (1)\n    id(\"application\")\n}\n\nrepositories {  (2)\n    mavenCentral()\n}\n\ndependencies {  (3)\n    testImplementation(\"org.junit.jupiter:junit-jupiter-engine:5.9.3\")\n    testRuntimeOnly(\"org.junit.platform:junit-platform-launcher\")\n    implementation(\"com.google.guava:guava:32.1.1-jre\")\n}\n\napplication {   (4)\n    mainClass = \"com.example.Main\"\n}\n\ntasks.named&lt;Test&gt;(\"test\") { (5)\n    useJUnitPlatform()\n}\n\ntasks.named&lt;Javadoc&gt;(\"javadoc\").configure {\n    exclude(\"app/Internal*.java\")\n    exclude(\"app/internal/*\")\n}\n\ntasks.register&lt;Zip&gt;(\"zip-reports\") {\n    from(\"Reports/\")\n    include(\"*\")\n    archiveFileName.set(\"Reports.zip\")\n    destinationDirectory.set(file(\"/dir\"))\n}\n\n// build.gradle\n\nplugins {   (1)\n    id 'application'\n}\n\nrepositories {  (2)\n    mavenCentral()\n}\n\ndependencies {  (3)\n    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'\n    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\n    implementation 'com.google.guava:guava:32.1.1-jre'\n}\n\napplication {   (4)\n    mainClass = 'com.example.Main'\n}\n\ntasks.named('test', Test) { (5)\n    useJUnitPlatform()\n}\n\ntasks.named('javadoc', Javadoc).configure {\n    exclude 'app/Internal*.java'\n    exclude 'app/internal/*'\n}\n\ntasks.register('zip-reports', Zip) {\n    from 'Reports/'\n    include '*'\n    archiveFileName = 'Reports.zip'\n    destinationDirectory = file('/dir')\n}\n</code></pre>"},{"location":"scripts_gradle/#6-otros-puntos-importantes","title":"6. Otros puntos importantes","text":"<ul> <li>Acceso a propiedades del proyecto   Puedes usar propiedades como <code>name</code>, <code>version</code>, <code>group</code> directamente sin necesidad de calificar con <code>project.</code> en muchos casos. </li> <li> <p>Scripts de Settings   Operan dentro del contexto <code>Settings</code>. Propiedades/m\u00e9todos del objeto <code>Settings</code> est\u00e1n disponibles directamente (como <code>name</code>, <code>rootProject.name</code>). </p> </li> <li> <p>Importaciones autom\u00e1ticas de script   Gradle a\u00f1ade autom\u00e1ticamente ciertos <code>import</code>s para que el c\u00f3digo del script sea m\u00e1s conciso (por ejemplo, usar <code>StopExecutionException</code> sin tener que escribir su nombre completo). </p> </li> </ul>"},{"location":"scripts_gradle/#imagen-ilustrativa","title":"Imagen ilustrativa","text":""},{"location":"scripts_gradle/#instrucciones-importantes-para-escribir-scripts","title":"Instrucciones importantes para escribir scripts","text":"<ul> <li>Usa <code>tasks.register(...)</code> en lugar de <code>tasks.create(...)</code> para evitar configuraciones prematuras.  </li> <li>Define repositorios antes de declarar dependencias para que Gradle sepa d\u00f3nde buscar los artefactos. </li> <li>Aprovecha las propiedades extra (<code>ext</code>/<code>extra</code>) para compartir configuraci\u00f3n entre proyectos o dentro del mismo script. </li> </ul> <p>Visita la p\u00e1gina original</p>"}]}